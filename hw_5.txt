	HW
	Client_Server
1) Прочиать про клиент-серверную архитектуру

	Это сетевая архитектура состоящая из потребителя (клиента) и поставщика 	
	(сервера), которые взаимоействуют между собой с помощью запросов 
	реализованых по средствам сетевых протоколов.
	Различают два вида клиент-серверных архитектур:
		1. Двух уровневая – Тут взаимодействие происходит между клиентом и 		
		сервером. Клиент шлет запрос,  и сервер ему возвращает ответ
		2. Трех уровневая – Тут к взаимодействию добавляется еще сервер 		
		базы данных. Клиент шлет запрос, сервер принимает и отправляет свой 		
		запрос на выборку данных серверу БД, сервер БД возвращает данные 		
		серверу, а он в свою очередь формирует ответ и отправляет клиенту.


2) Что ткое HTTP и HTTPS

	HTTP - Hyper Text Transfer Protocol (протокол передачи гипер текста). 
	Это сетевой протокол прикладного уровня который используется для передачи
	запросов в клиент-серверной архитектуре.
	HTTPS - защищенный HTTP протокол который в свою очередь использует для 	шифрования протоколы SSL и TLS.

3) HTTP методы

	- GET - как правило используется для запроса на получение содержимого целевого ресурса.
	- HEAD - то же что и GET но не содержит тела запроса.
	- POST - используется для передачи серверу данных клиента (логин, пароль, 	
	введенный текст коментария и т.п.), может вносить изменения, также метод 	
	пост не является идемпотентным.
	- PUT - используется для загрузки содержимого запроса, тоесть для 	
	обновления целевого ресурса.
	- DELETE - удаляет целевой ресурс.

	Вышеперечисленные методы считаются основными, так же существуют PATCH, 	
	TRACE, CONNECT, OPTIONS и другие.

4) HTTP статус коды сервера

	Статус код, это по сути числовой ответ сервера на тот или иной запрос от 	
	клиента, по нему клиент понимает был ли его запрос успешным и что ему необходимо делать.
	Существует определенное количество "стандартных" статус кодов прописаных в 	
	мировой спецификации, бывают 100-е, 200-е, 300-е, 400-е, 500-е.
	Самые распространенные статус коды:
	- 1хх это информационные коды
	- 2хх коды успеха (200 ОК, 201 Created, 202 Accepted, 204 No content)
	- 3xx коды редиректа (300 выбрать редирект, 301 ресурс перемещен)
	- 4хх коды ошибок на стороне клиента (400 не корректный запрос, 401 не авторизован, 
	403 доступ запрещен, 404 не найден запрашивемый ресурс, 
	405 метод запроса не поддерживается, 408 время ожидания вышло)
	- 5хх ошибки сервера (500 внутрення ошибка сервера, 502 ошибка шлюза, 
	503 сервис не доступен, 505 версия http не поддерживается, 511 нужна аутентификация)

5) Что такое ядро браузера

	Это "движок" браузера, по факту он обрабатывает ответы серверов, 
	преобразовывает и отрисовывает содержимое выводя пользователю красивую	картинку на экран.

6) Какие браузеры какиие ядра используют

	На данный момент самые популярные движки - Blink (Google Chrome, YB, Opera, Edge),
	WebKit (Safari), Gecko (Mozilla Firefox).
	Старые движки - Trident (IE), Presto (Opera)

7) Что такое API

	Application Programing Interface - это набор различых методов и функций 
	которые описывают как одна программа должна взаимодействовать с другой.
	По сути это та самая часть сервера которая получает запросы и отправляет ответы.

8. Что такое ендпоинты

	Это адрес ресурса на который посылается запрос от клиента, тоесть это URL +port.

9) URL (URI, URL, URN)

	URL - Uniform Resource Locator, адрес расположения ресурса в сети и способ обращения к указанному ресурсу.  
	URN - Uniform Resouce Name, только имя ресурса, без указания как к нему подключиться.
	URI - Uniform Resource Identifier, идентификатор ресурса включающий в себя и URL и URN.
		Пример:
			URL - https://www.sq.com.ua/img/news/2022/06/11/3(1).jpg
			URI - www.sq.com.ua/img/news/2022/06/11/3(1).jpg
			URN - img/news/2022/06/11/3(1).jpg

10) Идемпотентные HTTP методы

	Это когда первый http запрос и все последующие идентичные запросы имеют одинаковый результат.
	GET, HEAD, PUT, DELETE - идемпотентные.

11) Безопасные HTTP методы

	Это методы которые не меняют состояние сервера, тоесть выполняют операцию "чтения".

12) Иденфикация, Аутентификация, Авторизация

	Идентификация - Процес распознавания и проверки существования данного субьекта в базе сервера (логин пользователя).
	Аутентификация - проверка подлинности предоставленных пользователем данных (пароль).
	Авторизация - предоставление определенных прав на использование ресурса.
		Пример:
			Идентификация - пользователь отправляет логин и пароль на сервер, сервер передает запрос в БД, 
			база данных отвечает что такой пользователь есть.
			Аутентификация - база данных подтверждает что пароль предоставленный пользователем в запросе 
			совпадает с паролем этого пользователя в базе данных.
			Авторизация - пользователю разрешается войти в систему и предоставляется определенный набор прав, 
			например на редактирование своего профиля.
 
13) Что такое IP

	Internet Protocol - идентификатор устройства в сети, служит для определения местанахождения устройства в сети.
	IPv4 - это 32 битное число разбитое на 4 десятичных числа по 8 бит, например - 192.168.0.55

14) Что такое октаты в DNS

	Domain Name System - служит для преобразования имени ресурса в IP адрес.
	Октета - 8 битная секция IP адреса.


15) Что такое порт, сколько портов у Linux сервера

	Порт это по факту дверь офиса (ресурса) в здании (на сервере) в которую 
	стучится посетитель (клиент) чтобы получить доступ к нужному ему ресурсу.
	Существует 2 типа портов - TCP и UDP
	Всего портов 65535 и они разделены на 3 типа. 0-1023 системные порты, 
	1024-49151 зарегистрированные порты, 49152-65535 динамические порты.

16) Уровни OSI
	Модель OSI:
	1. Физический - медный кабель
	2. Канальный - MAC адресация
	3. Сетевой - IP
	4. Транспортный - TCP, UDP
	5. Сеансовый - PPTP, L2TP, RPC
	6. Представления - шифровка\расшифровка, перевод кодировки
	7. Прикладной - HTTP, FTP

	Модель TCP\IP:
	1. Доступа к сети
	2. Интернет
	3. Транспортный
	4. Приложений

17) Хедеры http запросов

	Основная часть HTTP запроса, содержит информацию о браузере клиента, ОС,
	запрашиваемом ресурсе, информацию о сервере и т.д.
		General - основные заголовки, включаются в любое сообщение клиента и сервера.
		Request - заголовки запросов, использует только клиент в своих запросах.
		Respnse - заголовки ответа, использует сервер в своих ответах.
		Entity - заголовки сущности, сопровождают каждую сущность сообщения.
